<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hj_init();

animTimer = 0;
WIN_WID = room_width;
WIN_HEI = room_height;
WIN_HALF_WID = room_width &gt;&gt; 1;
WIN_HALF_HEI = room_height &gt;&gt; 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hj_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// za warudo
animTimer++;

// fill
draw_clear(F8.BLACK);

// draw basic (dkb844)
hj_change_font(sprHanH12, sprEngSlant);


// hj_set_align() 은 정렬을 정할때 사용합니다.
// 일반적인 draw_set_halign(), draw_set_valign() 와 비슷하지만,
// halign과 valign을 한번에 정합니다.
hj_change_font(sprHanH12, sprEngSlant);

hj_set_align(fa_left, fa_top);
hj_draw_transformed(WIN_HALF_WID - 200, WIN_HALF_HEI - 200, "좌측#상단!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID - 200, WIN_HALF_HEI - 200, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형
hj_set_align(fa_center, fa_top);
hj_draw_transformed(WIN_HALF_WID, WIN_HALF_HEI - 200, "상단!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID, WIN_HALF_HEI - 200, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형
hj_set_align(fa_right, fa_top);
hj_draw_transformed(WIN_HALF_WID + 200, WIN_HALF_HEI - 200, "우측#상단!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID + 200, WIN_HALF_HEI, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형

hj_set_align(fa_left, fa_middle);
hj_draw_transformed(WIN_HALF_WID - 200, WIN_HALF_HEI, "좌측!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID - 200, WIN_HALF_HEI, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형
hj_set_align(fa_center, fa_middle);
hj_draw_transformed(WIN_HALF_WID, WIN_HALF_HEI, "중간!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID, WIN_HALF_HEI, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형
hj_set_align(fa_right, fa_middle);
hj_draw_transformed(WIN_HALF_WID + 200, WIN_HALF_HEI, "우측!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID + 200, WIN_HALF_HEI, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형

hj_set_align(fa_left, fa_bottom);
hj_draw_transformed(WIN_HALF_WID - 200, WIN_HALF_HEI + 200, "좌측#하단!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID - 200, WIN_HALF_HEI + 200, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형
hj_set_align(fa_center, fa_bottom);
hj_draw_transformed(WIN_HALF_WID, WIN_HALF_HEI + 200, "하단!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID, WIN_HALF_HEI + 200, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형
hj_set_align(fa_right, fa_bottom);
hj_draw_transformed(WIN_HALF_WID + 200, WIN_HALF_HEI + 200, "우측#하단!", 2, 2, 0, F8.WHITE, 1);
draw_rect(WIN_HALF_WID + 200, WIN_HALF_HEI + 200, 4, 4, F8.RED); // 원본 좌표를 보여주는 사각형
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
